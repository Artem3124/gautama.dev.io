import{b as _}from"./PracticesList-DwDAJZuH.js";import{G as f}from"./GradientSphere-CO6z8F9A.js";import{p as u}from"./practiceTheme-KfwvLvWs.js";import{w as S,e as y}from"./Core-hGU-nzEP.js";import{_ as l,o as i,c as n,b as o,w as p,T as m,t as w,j as b,r as d,g as z}from"./index-BrxLVilw.js";import{a as I,b as P}from"./Computed-DpeEY079.js";const h={0:"Inhale",1:"Hold",2:"Exhale",3:"Hold",255:"Get ready"},x={props:{practice:{type:Object,required:!0}},components:{GradientSphere:f},data(){return{instructionId:255,instruction:h[255],progressSeconds:0,repetition:0,timer:0,duration:0,showProgress:!1,practiceTheme:u,sphereSize:20,sizeMultiplier:1,step:0,theme:this.practice.theme}},computed:{computedSize(){return`${this.sphereSize*this.sizeMultiplier}rem`}},watch:{instructionId(e){switch(e){case 0:case 1:this.sizeMultiplier=1.3;break;default:this.sizeMultiplier=1}}},mounted(){this.duration=this.practice.pattern.reduce((e,r)=>e+r,0)*this.practice.reps,this.changeInstruction(h[255],255),setTimeout(async()=>{await this.startPractice()},3e3)},methods:{async startPractice(){this.startTimer();let e=this.practice.pattern.length,r=this.practice.reps;for(;this.repetition<r;){for(let s=0;s<e;s++)this.step=this.practice.pattern[s],this.progressSeconds+=this.step,this.changeInstruction(h[s],s),await S(this.step*1e3);this.repetition++}this.showProgress=!1,this.$router.push({name:"practice-end",params:{theme:y.keyByValueToString(u,this.theme)}})},startTimer(){this.showProgress=!0,setInterval(()=>{this.timer++},1e3)},changeInstruction(e,r){this.instruction=e,this.instructionId=r}}},k={class:"practice-index-container"},T=["value","max"];function v(e,r,s,g,t,c){const a=d("GradientSphere");return i(),n("div",k,[o(a,{class:"gradient-sphere",blur:20,size:c.computedSize,theme:t.theme,"step-duration":t.step},{default:p(()=>[o(m,{name:"fade",mode:"out-in"},{default:p(()=>[(i(),n("div",{key:t.instruction},w(t.instruction),1))]),_:1})]),_:1},8,["size","theme","step-duration"]),o(m,{name:"show-breath-progress"},{default:p(()=>[t.showProgress?(i(),n("progress",{key:0,class:"breathe-progress",value:t.timer,max:t.duration},null,8,T)):b("",!0)]),_:1})])}const B=l(x,[["render",v]]),G={components:{SphereAndInstructions:B},props:{id:{type:String,required:!0}},data(){return{practice:_[this.id]}},computed:{background(){return console.log(this.practice.theme),I.bgByEnumTheme({theme:this.practice.theme,styleBuilder:P})}}};function M(e,r,s,g,t,c){const a=d("SphereAndInstructions");return i(),n("div",{class:"content",style:z(c.background)},[o(a,{practice:t.practice},null,8,["practice"])],4)}const H=l(G,[["render",M]]);export{H as default};
